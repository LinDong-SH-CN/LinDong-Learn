//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace LinDong.Database.Firebird
{
    /// <summary>
    /// Database       : Firebird
    /// Data Source    : localhost
    /// Server Version : WI-V4.0.2.2816 Firebird 4.0/tcp (Shaw-eluktronics)/P16:C
    /// </summary>
    public partial class FirebirdDB : LinqToDB.Data.DataConnection
    {
        public ITable<UserPower> UserPowers { get { return this.GetTable<UserPower>(); } }

        public FirebirdDB()
        {
            InitDataContext();
            InitMappingSchema();
        }

        public FirebirdDB(string configuration)
            : base(configuration)
        {
            InitDataContext();
            InitMappingSchema();
        }

        public FirebirdDB(DataOptions options)
            : base(options)
        {
            InitDataContext();
            InitMappingSchema();
        }

        public FirebirdDB(DataOptions<FirebirdDB> options)
            : base(options.Options)
        {
            InitDataContext();
            InitMappingSchema();
        }

        partial void InitDataContext();
        partial void InitMappingSchema();
    }

    [Table(Schema = "SYSDBA", Name = "UserPowers")]
    public partial class UserPower
    {
        [PrimaryKey, NotNull] public string UserPowerId { get; set; } // char(38)
        [Column, Nullable] public string UserPowerName { get; set; } // varchar(50)
        [Column, Nullable] public bool? Disuse { get; set; } // boolean
        [Column, Nullable] public DateTime? CreateDate { get; set; } // timestamp
        [Column, Nullable] public DateTime? UpdateDate { get; set; } // timestamp
    }

    public static partial class TableExtensions
    {
        public static UserPower Find(this ITable<UserPower> table, string UserPowerId)
        {
            return table.FirstOrDefault(t =>
                t.UserPowerId == UserPowerId);
        }
    }
}
